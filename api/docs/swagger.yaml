definitions:
  handler.Response:
    properties:
      data: {}
      description:
        type: string
      error: {}
      status:
        type: integer
    type: object
  models.AdminCreate:
    properties:
      addres:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone_number:
        type: string
    type: object
  models.AdminUpdate:
    properties:
      addres:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone_number:
        type: string
    type: object
  models.Banner:
    properties:
      banner_image:
        type: string
      created_at:
        type: string
      delete_at:
        type: string
      id:
        type: string
      updated_at:
        type: string
    type: object
  models.BannerCreate:
    properties:
      banner_image:
        type: string
    type: object
  models.BannerUpdate:
    properties:
      banner_image:
        type: string
      id:
        type: string
    type: object
  models.BrandCreate:
    properties:
      brand_image:
        type: string
      name:
        type: string
    type: object
  models.BrandUpdate:
    properties:
      brand_image:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  models.CategoryCreate:
    properties:
      name:
        type: string
      parent_id:
        type: string
      url:
        type: string
    type: object
  models.CategoryUpdate:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  models.Color:
    properties:
      color_name:
        type: string
      color_url:
        items:
          type: string
        type: array
      count:
        type: integer
      created_at:
        type: string
      delete_at:
        type: string
      id:
        type: string
      product_id:
        type: string
      updated_at:
        type: string
    type: object
  models.ColorCreate:
    properties:
      color_name:
        type: string
      color_url:
        items:
          type: string
        type: array
      count:
        type: integer
      product_id:
        type: string
    type: object
  models.CustomerCreate:
    properties:
      birthday:
        type: string
      gender:
        type: string
      name:
        type: string
      phone_number:
        type: string
      surname:
        type: string
    type: object
  models.CustomerUpdate:
    properties:
      birthday:
        type: string
      gender:
        type: string
      id:
        type: string
      name:
        type: string
      phone_number:
        type: string
      surname:
        type: string
    type: object
  models.LocationCreate:
    properties:
      closes_at:
        type: string
      image:
        type: string
      info:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
      opens_at:
        type: string
    type: object
  models.LocationUpdate:
    properties:
      closes_at:
        type: string
      id:
        type: string
      image:
        type: string
      info:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
      opens_at:
        type: string
    type: object
  models.Order:
    properties:
      created_at:
        type: string
      customer_id:
        type: string
      delete_at:
        type: string
      delivery_cost:
        type: number
      delivery_status:
        type: string
      id:
        type: string
      order_items:
        items:
          $ref: '#/definitions/models.OrderItems'
        type: array
      payment_method:
        type: string
      payment_status:
        type: string
      status:
        type: string
      total_price:
        type: number
      updated_at:
        type: string
    type: object
  models.OrderCreate:
    properties:
      customer_id:
        type: string
      delivery_cost:
        type: number
      delivery_status:
        type: string
      payment_method:
        type: string
      payment_status:
        type: string
    type: object
  models.OrderCreateRequest:
    properties:
      items:
        items:
          $ref: '#/definitions/models.OrderItems'
        type: array
      order:
        $ref: '#/definitions/models.Order'
    type: object
  models.OrderItems:
    properties:
      color_id:
        description: Yangi qo'shilgan maydon
        type: string
      created_at:
        type: string
      delete_at:
        type: string
      id:
        type: string
      order_id:
        type: string
      price:
        type: number
      product_id:
        type: string
      quantity:
        type: integer
      total:
        type: number
      updated_at:
        type: string
    type: object
  models.OrderUpdate:
    properties:
      customer_id:
        type: string
      delivery_cost:
        type: number
      delivery_status:
        type: string
      id:
        type: string
      payment_method:
        type: string
      payment_status:
        type: string
      status:
        type: string
      total_price:
        type: number
    type: object
  models.Product:
    properties:
      brand_id:
        type: string
      category_id:
        type: string
      color:
        items:
          $ref: '#/definitions/models.Color'
        type: array
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      discount_end_time:
        type: string
      discount_percent:
        type: number
      favorite:
        type: boolean
      id:
        type: string
      image:
        type: string
      item_count:
        type: integer
      name:
        type: string
      price:
        type: number
      rating:
        type: number
      status:
        type: string
      updated_at:
        type: string
      with_discount:
        type: number
    type: object
  models.ProductCreate:
    properties:
      brand_id:
        type: string
      category_id:
        type: string
      description:
        type: string
      discount_end_time:
        type: string
      discount_percent:
        type: number
      favorite:
        type: boolean
      image:
        type: string
      item_count:
        type: integer
      name:
        type: string
      price:
        type: number
      rating:
        type: number
      status:
        type: string
      with_discount:
        type: number
    type: object
  models.ProductGetListResponse:
    properties:
      count:
        type: integer
      product:
        items:
          $ref: '#/definitions/models.Product'
        type: array
    type: object
  models.ProductUpdate:
    properties:
      brand_id:
        type: string
      category_id:
        type: string
      description:
        type: string
      discount_end_time:
        type: string
      discount_percent:
        type: number
      favorite:
        type: boolean
      id:
        type: string
      image:
        type: string
      item_count:
        type: integer
      name:
        type: string
      price:
        type: number
      rating:
        type: number
      status:
        type: string
      with_discount:
        type: number
    type: object
  models.Response:
    properties:
      data: {}
      description:
        type: string
      statusCode:
        type: integer
    type: object
  models.SwaggerOrderCreateRequest:
    properties:
      items:
        items:
          $ref: '#/definitions/models.SwaggerOrderItems'
        type: array
      order:
        $ref: '#/definitions/models.OrderCreate'
    type: object
  models.SwaggerOrderItems:
    properties:
      color_id:
        description: Yangi qo'shilgan maydon
        type: string
      product_id:
        type: string
      quantity:
        type: integer
    type: object
  models.UserLoginByPhoneConfirmRequest:
    properties:
      otp_code:
        type: string
      phone_number:
        type: string
    type: object
  models.UserLoginRequest:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  models.UserLoginResponse:
    properties:
      access_token:
        type: string
      id:
        type: string
      phone_number:
        type: string
      refresh_token:
        type: string
    type: object
  models.UserRegisterConfRequest:
    properties:
      customer:
        $ref: '#/definitions/models.CustomerCreate'
    type: object
  models.UserRegisterRequest:
    properties:
      mobile_phone:
        type: string
    type: object
info:
  contact: {}
paths:
  /e_commerce/api/v1/admin:
    get:
      consumes:
      - application/json
      description: Get List Admin
      operationId: get_list_admin
      parameters:
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get List Admin
      tags:
      - Admin
    post:
      consumes:
      - application/json
      description: Create Admin
      operationId: create_admins
      parameters:
      - description: CreateAdminRequest
        in: body
        name: Admin
        required: true
        schema:
          $ref: '#/definitions/models.AdminCreate'
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Admin
      tags:
      - Admin
  /e_commerce/api/v1/admin/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Admin
      operationId: delete_admin
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Admin
      tags:
      - Admin
    get:
      consumes:
      - application/json
      description: Get By ID Admin
      operationId: get_by_id_admin
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get By ID Admin
      tags:
      - Admin
    put:
      consumes:
      - application/json
      description: Update Admin
      operationId: update_admin
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateAdminRequest
        in: body
        name: Admin
        required: true
        schema:
          $ref: '#/definitions/models.AdminUpdate'
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Admin
      tags:
      - Admin
  /e_commerce/api/v1/banner:
    get:
      consumes:
      - application/json
      description: Get List Banner
      operationId: get_list_banner
      parameters:
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get List Banner
      tags:
      - Banner
    post:
      consumes:
      - application/json
      description: Create Banner
      operationId: create_banner
      parameters:
      - description: CreateBannerRequest
        in: body
        name: Banner
        required: true
        schema:
          $ref: '#/definitions/models.BannerCreate'
      responses:
        "200":
          description: Success Request
          schema:
            $ref: '#/definitions/models.Banner'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Banner
      tags:
      - Banner
  /e_commerce/api/v1/banner/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Banner
      operationId: delete_banner
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Banner
      tags:
      - Banner
    get:
      consumes:
      - application/json
      description: Get By ID Banner
      operationId: get_by_id_banner
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get By ID Banner
      tags:
      - Banner
    put:
      consumes:
      - application/json
      description: Update Banner
      operationId: update_banner
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateBannerRequest
        in: body
        name: Banner
        required: true
        schema:
          $ref: '#/definitions/models.BannerUpdate'
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Banner
      tags:
      - Banner
  /e_commerce/api/v1/brand:
    get:
      consumes:
      - application/json
      description: Get List Brand
      operationId: get_list_brand
      parameters:
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get List Brand
      tags:
      - Brand
    post:
      consumes:
      - application/json
      description: Create Brand
      operationId: create_brends
      parameters:
      - description: CreateBrandRequest
        in: body
        name: Brand
        required: true
        schema:
          $ref: '#/definitions/models.BrandCreate'
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Brand
      tags:
      - Brand
  /e_commerce/api/v1/brand/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Brand
      operationId: delete_brand
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Brand
      tags:
      - Brand
    get:
      consumes:
      - application/json
      description: Get By ID Brand
      operationId: get_by_id_brand
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get By ID Brand
      tags:
      - Brand
    put:
      consumes:
      - application/json
      description: Update Brand
      operationId: update_brand
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateBrandRequest
        in: body
        name: Brand
        required: true
        schema:
          $ref: '#/definitions/models.BrandUpdate'
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Brand
      tags:
      - Brand
  /e_commerce/api/v1/byphoneconfirm:
    post:
      consumes:
      - application/json
      description: Login to the system using phone number and OTP
      parameters:
      - description: login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.UserLoginByPhoneConfirmRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Customer login by phone confirmation
      tags:
      - auth
  /e_commerce/api/v1/category:
    get:
      consumes:
      - application/json
      description: Get List Category
      operationId: get_list_category
      parameters:
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: name
        in: query
        name: name
        type: string
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get List Category
      tags:
      - Category
    post:
      consumes:
      - application/json
      description: Create Category
      operationId: create_categorys
      parameters:
      - description: CreateCategoryRequest
        in: body
        name: Category
        required: true
        schema:
          $ref: '#/definitions/models.CategoryCreate'
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Category
      tags:
      - Category
  /e_commerce/api/v1/category/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Category
      operationId: delete_category
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Category
      tags:
      - Category
    get:
      consumes:
      - application/json
      description: Get By ID Category
      operationId: get_by_id_category
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get By ID Category
      tags:
      - Category
    put:
      consumes:
      - application/json
      description: Update Category
      operationId: update_category
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateCategoryRequest
        in: body
        name: Category
        required: true
        schema:
          $ref: '#/definitions/models.CategoryUpdate'
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Category
      tags:
      - Category
  /e_commerce/api/v1/color:
    get:
      consumes:
      - application/json
      description: Get List Color
      operationId: get_list_color
      parameters:
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get List Color
      tags:
      - Color
    post:
      consumes:
      - application/json
      description: Create Color
      operationId: create_color
      parameters:
      - description: CreateColorRequest
        in: body
        name: Color
        required: true
        schema:
          $ref: '#/definitions/models.ColorCreate'
      responses:
        "200":
          description: Success Request
          schema:
            $ref: '#/definitions/models.Color'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Color
      tags:
      - Color
  /e_commerce/api/v1/color/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Color
      operationId: delete_color
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Color
      tags:
      - Color
  /e_commerce/api/v1/customer:
    get:
      consumes:
      - application/json
      description: Get List Customer
      operationId: get_list_customer
      parameters:
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get List Customer
      tags:
      - Customer
    post:
      consumes:
      - application/json
      description: Create Customer
      operationId: create_customers
      parameters:
      - description: CreateCustomerRequest
        in: body
        name: Customer
        required: true
        schema:
          $ref: '#/definitions/models.CustomerCreate'
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Customer
      tags:
      - Customer
  /e_commerce/api/v1/customer/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Customer
      operationId: delete_customer
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Customer
      tags:
      - Customer
    get:
      consumes:
      - application/json
      description: Get By ID Customer
      operationId: get_by_id_customer
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get By ID Customer
      tags:
      - Customer
    put:
      consumes:
      - application/json
      description: Update Customer
      operationId: update_customer
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateCustomerRequest
        in: body
        name: Customer
        required: true
        schema:
          $ref: '#/definitions/models.CustomerUpdate'
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Customer
      tags:
      - Customer
  /e_commerce/api/v1/delete-file:
    delete:
      consumes:
      - multipart/form-data
      description: Delete File
      operationId: delete_file
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete File
      tags:
      - Upload File
  /e_commerce/api/v1/location:
    get:
      consumes:
      - application/json
      description: Get List Location
      operationId: get_list_location
      parameters:
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get List Location
      tags:
      - Location
    post:
      consumes:
      - application/json
      description: Create Location
      operationId: create_location
      parameters:
      - description: CreateLocationRequest
        in: body
        name: Location
        required: true
        schema:
          $ref: '#/definitions/models.LocationCreate'
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Location
      tags:
      - Location
  /e_commerce/api/v1/location/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Location
      operationId: delete_location
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Location
      tags:
      - Location
    get:
      consumes:
      - application/json
      description: Get By ID Location
      operationId: get_by_id_location
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get By ID Location
      tags:
      - Location
    put:
      consumes:
      - application/json
      description: Update Location
      operationId: update_location
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateLocationRequest
        in: body
        name: Location
        required: true
        schema:
          $ref: '#/definitions/models.LocationUpdate'
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Location
      tags:
      - Location
  /e_commerce/api/v1/login:
    post:
      consumes:
      - application/json
      description: Login to Voltify
      parameters:
      - description: login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.UserLoginRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.UserLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Customer login
      tags:
      - auth
  /e_commerce/api/v1/order:
    get:
      consumes:
      - application/json
      description: Retrieve all products
      operationId: get_all_orders
      parameters:
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.OrderCreateRequest'
            type: array
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get All Products
      tags:
      - Order
    post:
      consumes:
      - application/json
      description: Create Order
      operationId: create_order
      parameters:
      - description: CreateOrderRequest
        in: body
        name: Order
        required: true
        schema:
          $ref: '#/definitions/models.SwaggerOrderCreateRequest'
      responses:
        "201":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Order
      tags:
      - Order
  /e_commerce/api/v1/order/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Order
      operationId: delete_order
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Order
      tags:
      - Order
    get:
      consumes:
      - application/json
      description: Get By ID Order
      operationId: get_by_id_order
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Order'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get By ID Order
      tags:
      - Order
    put:
      consumes:
      - application/json
      description: Update Order
      operationId: update_order
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateOrderRequest
        in: body
        name: Order
        required: true
        schema:
          $ref: '#/definitions/models.OrderUpdate'
      responses:
        "202":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.OrderUpdate'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Order
      tags:
      - Order
  /e_commerce/api/v1/product:
    get:
      consumes:
      - application/json
      description: Get List Product
      operationId: get_list_product
      parameters:
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: favorite
        in: query
        name: favorite
        type: string
      - description: category_id
        in: query
        name: category_id
        type: string
      - description: name
        in: query
        name: name
        type: string
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.ProductGetListResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get List Product
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: Create Product
      operationId: create_product
      parameters:
      - description: CreateProductRequest
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/models.ProductCreate'
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Product
      tags:
      - Product
  /e_commerce/api/v1/product/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Product
      operationId: delete_product
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Product
      tags:
      - Product
    get:
      consumes:
      - application/json
      description: Get By ID Product
      operationId: get_by_id_product
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get By ID Product
      tags:
      - Product
    put:
      consumes:
      - application/json
      description: Update Product
      operationId: update_product
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateProductRequest
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/models.ProductUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Product
      tags:
      - Product
  /e_commerce/api/v1/sendcode:
    post:
      consumes:
      - application/json
      description: Registering to Voltify
      parameters:
      - description: register
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/models.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Customer register
      tags:
      - auth
  /e_commerce/api/v1/upload-files:
    post:
      consumes:
      - multipart/form-data
      description: Upload Multiple Files
      operationId: upload_multiple_files
      parameters:
      - collectionFormat: csv
        description: File to upload
        in: formData
        items:
          type: file
        name: file
        required: true
        type: array
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Upload Multiple Files
      tags:
      - Upload File
  /e_commerce/api/v1/verifycode:
    post:
      consumes:
      - application/json
      description: Registering to Voltify
      parameters:
      - description: register
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/models.UserRegisterConfRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.UserLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Customer register
      tags:
      - auth
swagger: "2.0"
